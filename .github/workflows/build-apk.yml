name: Build-Apk

on:
#   push:
#     branches: [ master ]
#   watch:
#     types: [started]
  schedule:
      # 分钟 时间 日期 月份 星期
    - cron: '0 7 * * *'

env:
  CODE_ROOT_PATH: /opt/legado
  BUILD_PATH: /opt/legado/app/build/outputs/apk/app/release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#       安装git(虚拟环境已附带)
#       - name: Install git
#        run: |
#          echo "install git"
#          sudo apt update
#          sudo apt install -y git

#       初始化git
      - name: Set env
        run: |
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global user.name "zhangxx"

#       拉取代码
      - name: Clone code
        run: |
          echo "clone code"
          if [ -d "${{env.CODE_ROOT_PATH}}" ]; then
            echo "delete old code folder"
            rm -rf ${{env.CODE_ROOT_PATH}}
          fi
          git clone 'https://github.com/gedoor/legado.git' ${{env.CODE_ROOT_PATH}}
          cd ${{env.CODE_ROOT_PATH}}
          git checkout master

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: clear 18PlusList.txt
        run: |
          echo "清空18PlusList.txt"
          echo "">${{env.CODE_ROOT_PATH}}/app/src/main/assets/18PlusList.txt

      - name: release apk sign
        run: |
          echo "给apk增加签名"
          sed '$a\RELEASE_STORE_FILE=../.github/workflows/legado.jks' ${{env.CODE_ROOT_PATH}}/gradle.properties -i
          sed '$a\RELEASE_KEY_ALIAS=legado'                           ${{env.CODE_ROOT_PATH}}/gradle.properties -i
          sed '$a\RELEASE_STORE_PASSWORD=gedoor_legado'               ${{env.CODE_ROOT_PATH}}/gradle.properties -i
          sed '$a\RELEASE_KEY_PASSWORD=gedoor_legado'                 ${{env.CODE_ROOT_PATH}}/gradle.properties -i

      - name: apk live together
        run: |
          echo "设置apk共存"
          sed "s/'.release'/'.releaseA'/" ${{env.CODE_ROOT_PATH}}/app/build.gradle  -i
          sed 's/.release/.releaseA/'     ${{env.CODE_ROOT_PATH}}/app/google-services.json -i

      - name: build with gradle
        run: |
          echo "开始进行release构建"
          cd ${{env.CODE_ROOT_PATH}}
          chmod +x ${{env.CODE_ROOT_PATH}}/gradlew
          ${{env.CODE_ROOT_PATH}}/gradlew assembleAppRelease

      - name: upload to pgyer
        run: |
          echo "start upload pgyer"
          cd ${{env.CODE_ROOT_PATH}}
          APK_PATH=${{env.BUILD_PATH}}/`ls ${{env.BUILD_PATH}} | grep .apk`
          echo "APK_PATH is "$APK_PATH
          output=`curl -F file=@$APK_PATH -F _api_key=${{ secrets.PGYER_API_KEY }} https://www.pgyer.com/apiv2/app/upload`
          echo $output
          echo $output > ${{env.BUILD_PATH}}/update.log

      - name: save apk
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: read
          path: ${{ env.BUILD_PATH }}
